{"objectClass":"NSDictionary","root":{"objectClass":"MindNode","ID":"VO1S3","rootPoint":{"objectClass":"CGPoint","x":360,"y":2534.5},"lineColorHex":"#BBBBBB","children":{"0":{"objectClass":"MindNode","ID":"NKJ02","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"IR853","lineColorHex":"#DC306C","text":"使用css的方式：\n1.在head中使用<style>标签。\n2.使用内联样式，通过style属性在元素中写css。\n3. 外部样式表，通过link标签引入外部样式\n4. 浏览器的设置。"},"1":{"objectClass":"MindNode","ID":"I5T90","lineColorHex":"#DC306C","text":"css语法规范：\n1. 注释：/* */ \n2.  选择器 声明块 组成css语句\n选择器：通过选择器可以选中页面中的指定元素。\n声明块：为指定的元素设置的样式，声明是一个名值对结构，冒号分隔，以分号结尾。\n"},"2":{"objectClass":"MindNode","ID":"M7158","lineColorHex":"#DC306C","text":"在模块定义还不太稳定的阶段，浏览器会采用厂商前缀实现某个特性。\nChrome、Safari：-webkit-\nOpera：-o-\nFirefox： -moz-\nIE：-ms-"},"objectClass":"NSArray"},"text":"css简介：\n层叠样式表，网页分成三个部分，\n结构(HTML)，表现(CSS)，行为(JS)"},"1":{"objectClass":"MindNode","ID":"6XD4G","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"R0E2W","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"1HNM2","lineColorHex":"#BF58F5","text":"通过元素名来选择元素，选择范围很广把页面上所有被选中的元素都加上css样式。\n只需将元素类型用逗号分开即可将某个样式应用到多个元素类型。"},"objectClass":"NSArray"},"text":"元素选择器"},"1":{"objectClass":"MindNode","ID":"7N25Y","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"YN297","lineColorHex":"#BF58F5","text":"通过特定的id属性来选择元素，以#来定义。id属性的值不能相同，也就是id是唯一的。"},"objectClass":"NSArray"},"text":"id选择器"},"2":{"objectClass":"MindNode","ID":"1C5I5","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"GBW6R","lineColorHex":"#BF58F5","text":"class 选择器在 HTML 中以 class 属性表示, 在 CSS 中，类选择器以一个点\".\"号显示。class 可以在多个元素中使用。"},"objectClass":"NSArray"},"text":"类选择器"},"3":{"objectClass":"MindNode","ID":"28C1W","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"W67Z1","lineColorHex":"#BF58F5","text":"选中页面中的所有元素\n*{\n}\n并且包括html和body元素。"},"objectClass":"NSArray"},"text":"通配选择器"},"4":{"objectClass":"MindNode","ID":"S469O","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"H2LU5","lineColorHex":"#BF58F5","text":"交集选择器：\n作用：选中同时符合多个条件的元素\n语法：选择器1选择器2{} \n注意中间没有空格，必须连着写。并且必须以元素选择器开头。"},"1":{"objectClass":"MindNode","ID":"46K0U","lineColorHex":"#BF58F5","text":"并集选择器：\n创建由逗号分隔的多个选择器可以将样式应用到单个选择器匹配的所有元素。\n作用，选中多个选择器对应的元素。\n语法：选择器1，选择器2{}"},"2":{"objectClass":"MindNode","ID":"7J70C","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"284GT","lineColorHex":"#BF58F5","text":"后代选择器\n选中指定父元素所有的指定的后代元素\n父元素 子元素（中间加空格"},"1":{"objectClass":"MindNode","ID":"A458R","lineColorHex":"#BF58F5","text":"子元素选择器\n选中指定父元素的直接子元素\n父元素>子元素"},"2":{"objectClass":"MindNode","ID":"64D6V","lineColorHex":"#BF58F5","text":"相邻兄弟选择器：\n使用相邻兄弟选择器可以选择紧跟在某元素之后的元素。\n前一个元素 + 后一个元素"},"3":{"objectClass":"MindNode","ID":"O4FHQ","lineColorHex":"#BF58F5","text":"普通兄弟选择器选取所有指定元素的相邻兄弟元素\n前一个元素 ~后一个元素"},"objectClass":"NSArray"},"text":"关系选择器(父子兄弟选择器)\n父元素：直接包含子元素的元素是父元素\n\n子元素：被父元素直接包含的是子元素\n\n祖先元素：直接或间接包含后代元素的元素是祖先元素。一个元素只有一个父元素。\n\n后代元素：直接或间接被祖先元素包含的元素\n\n兄弟元素：拥有相同父元素的元素就是兄弟元素。"},"objectClass":"NSArray"},"text":"复合选择器"},"5":{"objectClass":"MindNode","ID":"77SKR","lineColorHex":"#BF58F5","text":"属性选择器\n[属性名] 就可以选中含有指定属性名的元素\n[属性名=属性值] 选中含有指定属性和属性值的元素\n[属性名^=属性值]选中属性值以指定值开头的元素\n[属性名$=属性值]选中属性值以指定值结尾的元素\n[属性名*=属性值]选中属性值含有指定值的元素"},"6":{"objectClass":"MindNode","ID":"K0368","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"1Q71Y","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"VS93C","lineColorHex":"#BF58F5","text":":first-child \n第一个子元素"},"1":{"objectClass":"MindNode","ID":"3W034","lineColorHex":"#BF58F5","text":":last-child\n最后一个子元素"},"2":{"objectClass":"MindNode","ID":"5O5Q4","lineColorHex":"#BF58F5","text":":nth-child()\n选中第n个子元素。\n特殊值 n 第n个范围0-正无穷\n2n 表示选中偶数的子元素\n2n+1/odd 表示选中奇数的子元素"},"3":{"objectClass":"MindNode","ID":"B25D4","lineColorHex":"#BF58F5","text":":first-of-type\n:last-of-type\n:nth-of-type\n这三个都是描述同类型中的某一个，不会管其他元素。前面三个是在所有的元素进行描述的，一旦不符合就不会生效。","markType":7},"4":{"objectClass":"MindNode","ID":"SOJQ8","lineColorHex":"#BF58F5","text":":not()否定伪类\n将符合条件的元素删除"},"5":{"objectClass":"MindNode","ID":"GJF0Y","lineColorHex":"#BF58F5","text":":root跟元素选择器\n:root选择器匹配文档中的根元素。它可能是用得最少的一个伪类选择器，因为总是返回html元素。"},"6":{"objectClass":"MindNode","ID":"I5603","lineColorHex":"#BF58F5","text":":only-child选择器\n:only-child选择器匹配父元素包含的唯一子元素。"},"7":{"objectClass":"MindNode","ID":"5J7UG","lineColorHex":"#BF58F5","text":"：only-of-type：\n:only-of-type选择器匹配父元素定义类型的唯一子元素。 就是说匹配父元素中只有一个子元素的这个子元素。"},"objectClass":"NSArray"},"text":"\n子元素选择器："},"1":{"objectClass":"MindNode","ID":"6C1D7","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"5CG8S","lineColorHex":"#BF58F5","text":"a:link {color:#FF0000;} /* 未访问的链接 */\na:visited {color:#00FF00;} /* 已访问的链接 */\na:hover {color:#FF00FF;} /* 鼠标划过链接 */\na:active {color:#0000FF;} /* 已选中的链接 */"},"1":{"objectClass":"MindNode","ID":"YS34Q","lineColorHex":"#BF58F5","text":"注意： 在 CSS 定义中，a:hover 必须被置于 a:link 和 a:visited 之后，才是有效的。\n\n注意： 在 CSS 定义中，a:active 必须被置于 a:hover 之后，才是有效的。\n\n注意：伪类的名称不区分大小写。"},"2":{"objectClass":"MindNode","ID":"OM84T","lineColorHex":"#BF58F5","text":"focus选择器：\n最后一个动态伪类选择器是：focus选择器，它匹配当前获得焦点的元素。"},"objectClass":"NSArray"},"text":"动态伪类"},"2":{"objectClass":"MindNode","ID":"V54S7","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"TB63O","lineColorHex":"#BF58F5","text":"1. 选择启用或者禁用元素\n有些元素有启用或者禁用状态，这些元素一般是用来收集用户输入的。:enabled和：disabled选择器不会匹配没有禁用状态的元素。"},"1":{"objectClass":"MindNode","ID":"9820J","lineColorHex":"#BF58F5","text":"2. 选择已勾选的元素\n使用：checked选择器可以选中由checked属性或者用户勾选的单选按钮或者复选框。"},"2":{"objectClass":"MindNode","ID":"IXSAR","lineColorHex":"#BF58F5","text":"3. 选择默认元素\n:default选择器从一组类似的元素中选择默认元素。例如，提交按钮总是表单的默认按钮。"},"3":{"objectClass":"MindNode","ID":"P71C4","lineColorHex":"#BF58F5","text":"4. 选择有效和无效的input元素\n:valid和：invalid选择器分别匹配符合和不符合它们的输入验证要求的input元素。"},"objectClass":"NSArray"},"text":"UI伪类选择器\n大多都是跟表单元素相关的。","markType":7},"objectClass":"NSArray"},"text":"伪类选择器\n伪类是用来描述一个元素的特殊状态\n比如：第一个子元素、被点击的元素、鼠标移入的元素:root选择器匹配文档中的根元素。它可能是用得最少的一个伪类选择器，因为总是返回html元素。"},"7":{"objectClass":"MindNode","ID":"F3MQM","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"S4552","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"808OP","lineColorHex":"#BF58F5","text":"：：first-letter\n表示第一个字母\n：：first-line\n表示第一行\n：：selection\n表示选中的元素"},"1":{"objectClass":"MindNode","ID":"0O2Q1","lineColorHex":"#BF58F5","text":"：：before\n表示元素的起始位置\n：：after\n表示元素的最后位置 通过设置content属性的值可以指定要插入的内容"},"objectClass":"NSArray"},"text":"表示页面中一些特殊的并不真实存在的元素(特殊位置)\n伪元素使用 ::开头\n可以与交集选择器混用。不过伪元素选择器也可以作为修饰符跟其他选择器一块儿使用。例如，假设我想选中p元素的首行，就可以指定p::first-line作为选择器。"},"1":{"objectClass":"MindNode","ID":"131JW","lineColorHex":"#BF58F5","text":"伪元素选择器的前缀是两个冒号字符（::），但浏览器认为选择器只有一个冒号（也就说将::first-line看做:first-line）。这样它的格式就跟伪类选择器的格式一致了，本章前面讲过，这是为了向后兼容。"},"objectClass":"NSArray"},"text":"伪元素选择器"},"objectClass":"NSArray"},"text":"css选择器"},"2":{"objectClass":"MindNode","ID":"3GWD4","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"9660W","lineColorHex":"#26BBFF","text":"样式的继承：\n我们为一个元素设置的样式，也会应用到它的后代元素。\n\n继承是发生在祖先和后代身上的，可以将通用的样式，统一设置在祖先元素身上。\n\n但是并不是所有的样式都会被继承，比如背景和布局相关等等都不会被继承。"},"1":{"objectClass":"MindNode","ID":"872V0","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"8O5YN","lineColorHex":"#26BBFF","text":"如果优先级计算之后还是相同，则优先使用靠下的样式。"},"objectClass":"NSArray"},"text":"首先要说明一个问题样式冲突：\n当我们通过不同的选择器选中相同的元素，并且为样式设置不同的样式时，就发生了样式冲突。\n\n发生样式冲突时，应用哪个样式由选择器的权重决定。\n\n选择器的请权重：\n内联样式   1000\nid选择器    100\n类和伪类选择器   10\n元素和伪元素选择器 1\n\n选择器的累加不会超过其最大的值。\n\n统配选择器 * 优先级为0  继承的样式没有优先级"},"objectClass":"NSArray"},"text":"继承/选择器的权重"},"3":{"objectClass":"MindNode","ID":"P7SQ7","lineColorHex":"#37C45A","children":{"0":{"objectClass":"MindNode","ID":"14123","lineColorHex":"#37C45A","children":{"0":{"objectClass":"MindNode","ID":"AU910","lineColorHex":"#37C45A","text":"em：\nem是相对于字体大小来计算的，1em = 1 fontsize。\nem会根据父元素字体大小的改变而改变。"},"1":{"objectClass":"MindNode","ID":"7VAG7","lineColorHex":"#37C45A","text":"rem：\n相对于根元素的字体大小来计算的，也就是根据浏览器的字体大小来决定的。"},"objectClass":"NSArray"},"text":"em和rem"},"objectClass":"NSArray"},"text":"CSS中的一些取值"},"4":{"objectClass":"MindNode","ID":"5IK2C","lineColorHex":"#1BD6E7","children":{"0":{"objectClass":"MindNode","ID":"03SS8","lineColorHex":"#1BD6E7","text":"1. 设置本地图片大小，指定宽度就行，但是宽度必须指定为父元素的100%，这样才能被包含在容器中。在引用图片的时候，尤其是做图片导航栏的时候，一定要将资源图片的宽高裁剪一致。"},"objectClass":"NSArray"},"text":"一些开发中遇到的样式设置问题"},"objectClass":"NSArray"},"text":"CSS"},"ID":"2V247","style":100}